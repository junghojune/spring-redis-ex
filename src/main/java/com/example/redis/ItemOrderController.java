package com.example.redis;import lombok.AllArgsConstructor;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.*;import org.springframework.web.server.ResponseStatusException;import java.util.ArrayList;import java.util.List;@RestController@RequestMapping("orders")@AllArgsConstructorpublic class ItemOrderController {    private ItemOrderRepository itemOrderRepository;    @GetMapping    public List<ItemOrder> getAll() {        List<ItemOrder> itemOrders = new ArrayList<>();        itemOrderRepository.findAll().forEach(itemOrders::add);        return itemOrders;    }    @GetMapping("{id}")    public ItemOrder getById(@PathVariable String id) {        return itemOrderRepository.findById(id).orElse(null);    }    @PostMapping    public void create(@RequestBody ItemOrder itemOrder){        itemOrderRepository.save(itemOrder);    }    @PutMapping("{id}")    public ItemOrder update(            @PathVariable("id")            String id,            @RequestBody            ItemOrder order    ) {        ItemOrder target = itemOrderRepository                .findById(id)                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND));        target.setName(order.getName());        target.setCount(order.getCount());        target.setAmount(order.getAmount());        target.setStatus(order.getStatus());        return itemOrderRepository.save(target);    }    @DeleteMapping("{id}")    @ResponseStatus(HttpStatus.NO_CONTENT)    public void delete(            @PathVariable("id")            String id    ) {        itemOrderRepository.deleteById(id);    }}